#
# .travis.yml
# =============================================================================
# VIRTual BLocK IO SIMulating (virtblkiosim). Version 0.9.9
# =============================================================================
# Virtual Linux block device driver for simulating and performing I/O.
#
# This is the configuration of the project characteristics
# used by the Travis CI (continuous integration) service
# to rebuild the project on every push and pull request.
#

%YAML 1.1
---

language: c

compiler: gcc

os:       linux

dist:     xenial

before_install:
    - sudo apt-get update

    ## Installing the Linux kernel headers package to build the driver.
    - sudo apt-get install linux-headers-`uname -r`

    ## Installing the Flexible I/O Tester package to test the driver.
    - sudo apt-get install fio

    ##
    # Installing the Doxygen (source code documentation system) package
    # to generate docs for the driver and ioctl() testing utility.
    #
    - sudo apt-get install doxygen

script:
    ## Querying the system for characteristics and available resources.
    - cat /proc/cpuinfo | grep name && echo
                                    && uname -a
                                    && echo
                                    && df -h
                                    && echo
                                    && free

    ## Building the Virtual Linux block device driver (virtblkiosim).
    ## Building the utility to run block device ioctl() tests (virtblkioctl).
    ## Generating docs (for both virtblkiosim and virtblkioctl).
    - ls -al && make clean
             && make clean
             && ls -al
             && make all
             && make all
             && ls -al
             && cd src
             && ls -al
             && echo
             && file virtblkiosim.ko
             && echo

    ## Loading the driver into the running kernel.
    - sudo insmod virtblkiosim.ko && lsblk
                                  && echo
                                  && lsmod | grep virtblkiosim
                                  && echo
                                  && ls -al /dev/virtblkiosim
                                  && echo
                                  && sudo cat /var/log/kern.log | grep virtblkiosim

    ## Returning to the previous working dir.
    - cd - && ls -al

    ## Running the VIRTual BLocK IOCTLing utility.
    - cd tests/ioctl && ls -al
                     && echo
                     && file virtblkioctl
                     && echo
                     && sudo ./virtblkioctl /dev/virtblkiosim --reguser none

    ## Returning to the previous working dir.
    - cd - && ls -al

    ## Running the VIRTual BLocK IOFIOing (fio/libaio) tests.
    - cd tests/iofio && ls -al
#                    && echo
#                    && sudo fio virtblkiofio-00-read.fio
#                    && echo
#                    && sudo fio virtblkiofio-01-write.fio

    ## Returning to the previous working dir.
    - cd - && ls -al
           && ls -al docs/doxygen/html
           && ls -al

    ## Unloading the driver from the running kernel.
    - sudo rmmod virtblkiosim && lsblk
                              && echo
                              && sudo cat /var/log/kern.log | grep virtblkiosim

...

# vim:set nu et ts=4 sw=4:
